[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tfutility"
description = "TfUtility provides different tools for Terraform Developers"
dynamic = ["version"]
readme = { file = 'README.md', content-type = 'text/markdown' }
license = { file = 'LICENSE' }
authors = [{ name = "Stefan Eiermann", email = "stefan.eiermann@eneka.de" }]
dependencies = [
  "python-hcl2==4.3.5",
  "argcomplete==3.5.2",
]
classifiers = [
  "Development Status :: 4 - Beta",
  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish (see also "license" above)
  "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",

  # Specify the Python versions you support here
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[tool.setuptools]
packages = ["tfutility"]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {attr = "tfutility.__version__"}


[project.optional-dependencies]
dev = [
  "pytest==8.3.3",
  "pytest-mock==3.14.0",
  "pytest-cov==6.0.0",
  "coverage==7.6.6",
  "pre_commit==4.0.1",
  "sphinx==8.1.3",
  "sphinx-argparse==0.5.2",
  "sphinx-autobuild==2024.10.3",
  "sphinx-toolbox==3.8.1",
  "sphinx-rtd-theme==3.0.2",
  "setuptools>=70.0.0"
  ]

[tool.black]
line-length = 88
target-version = ["py38", "py39"]
include = '\.pyi?$'
exclude = '''
/(
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-outpython-hcl2==4.3.5
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
# known_third_party = ["your_third_party_lib"]
# known_first_party = "tfutility"

[tool.flake8]
max-line-length = 88
extend-ignore = "E203, W503"

#[tool.coverage.report]
#fail_under = 80

[tool.coverage.run]
branch = true
#include = ["src/tfutility/*"]
# command_line = "-m unittest discover -s tests/"
source = ["."]

[project.scripts]
tfutility = "tfutility.main:main"



[project.urls]
Homepage = "https://github.com/eieste/tfutility/"
Documentation = "https://eieste.github.io/tfutility/"
Repo = "https://github.com/eieste/tfutility"
Issues = "https://github.com/eieste/tfutility/issues"
