[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tfutility"
description = "TfUtility provides different tools for Terraform Developers"
dynamic = ["version"]
readme = { file = 'README.md', content-type = 'text/markdown' }
license = { file = 'LICENSE' }
authors = [{ name = "Stefan Eiermann", email = "stefan.eiermann@eneka.de" }]
dependencies = ["python-hcl2"]


[tool.setuptools]
packages = ["tfutility"]

[tool.setuptools.dynamic]
version = {attr = "tfutility.__version__"}


[project.optional-dependencies]
dev = ["pre-commit", "sphinx-autobuild", "coverage", "pytest", "pytest-mock", "pre-commit", "sphinx-argparse"]
docs = ["sphinx", "sphinx-rtd-theme"]

[tool.black]
line-length = 88
target-version = ["py38", "py39"]
include = '\.pyi?$'
exclude = '''
/(
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-outpython-hcl2==4.3.5
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
# known_third_party = ["your_third_party_lib"]
# known_first_party = "tfutility"

[tool.flake8]
max-line-length = 88
extend-ignore = "E203, W503"

#[tool.coverage.report]
#fail_under = 80

[tool.coverage.run]
branch = true
#include = ["src/tfutility/*"]
# command_line = "-m unittest discover -s tests/"
source = ["."]

[project.scripts]
tfutility = "tfutility.main:main"
